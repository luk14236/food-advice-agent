AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Two-bot favorite-foods system (AnswerBot + AskBot) with API Gateway and an Orchestrator.

Globals:
  Function:
    Runtime: python3.12
    Timeout: 15
    MemorySize: 512
    Tracing: Active
    Environment:
      Variables:
        OPENAI_API_BASE: "https://api.openai.com/v1"
        OPENAI_MODEL_ANSWER: "gpt-4o-mini"
        OPENAI_MODEL_PARSE: "gpt-4o-mini"
        POWERTOOLS_SERVICE_NAME: "favorite-foods-bots"
        LOG_LEVEL: "INFO"

Parameters:
  OpenAIKeyParam:
    Type: String
    NoEcho: true
    Description: OpenAI API key

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      TracingEnabled: true
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowMethods: "'OPTIONS,POST,GET'"
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          ThrottlingBurstLimit: 100
          ThrottlingRateLimit: 50

  AnswerBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/answer_bot/
      Handler: app.handler
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAIKeyParam
      Events:
        PostAnswer:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /answer
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 1

  AskBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/ask_bot/
      Handler: app.handler
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAIKeyParam
      Events:
        PostAsk:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /ask
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 1

  OrchestratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/orchestrator/
      Handler: app.handler
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAIKeyParam
          ANSWER_URL: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/prod/answer"
          ASK_URL: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/prod/ask"
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - execute-api:Invoke
              Resource: "*"
      Events:
        PostSimulate:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /simulate
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 1

Outputs:
  ApiEndpoint:
    Description: API base URL
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/prod"
