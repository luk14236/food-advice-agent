AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Two-bot favorite-foods system (AnswerBot + AskBot) with API Gateway and an Orchestrator.

Globals:
  Function:
    Runtime: python3.12
    Timeout: 15
    MemorySize: 512
    Tracing: Active
  Api:
    Cors:
      AllowMethods: "'OPTIONS,DELETE,PUT,POST'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"
Parameters:
  OpenAIKeyParam:
    Type: String
    NoEcho: true
    Description: OpenAI API key


Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          Description: !Join [ " ", [ { "Ref": "AWS::StackName" }, "usage plan" ] ]
          Quota:
            Limit: 100000
            Period: DAY
          Throttle:
            BurstLimit: 1000
            RateLimit: 100
          UsagePlanName: !Join [ "", [ { "Ref": "AWS::StackName" }, "-usage-plan" ] ]

  AnswerBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/answer_bot/
      Handler: app.handler
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAIKeyParam
      Events:
        PostAnswer:
          Type: Api
          Properties:
            Path: /answer
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
            Auth:
              ApiKeyRequired: true

  AskBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/ask_bot/
      Handler: app.handler
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAIKeyParam
      Events:
        PostAsk:
          Type: Api
          Properties:
            Path: /ask
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
            Auth:
              ApiKeyRequired: true

  OrchestratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/orchestrator/
      Handler: app.handler
      Events:
        PostSimulate:
          Type: Api
          Properties:
            Path: /simulate
            Method: POST
            RestApiId:
              Ref: ApiGatewayApi
            Auth:
              ApiKeyRequired: true

Outputs:
  ApiEndpoint:
    Description: API base URL
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/prod"
